name: Build and Trigger Readthedocs

on:
  push:
    paths:
      - 'docs/**'           # Trigger for changes in the docs directory
      - '**/*.rst'          # Trigger for any RST files
      - '**/*.man'          # Trigger for any man page files
  pull_request:
    paths:
      - 'docs/**'           # Same triggers for pull requests
      - '**/*.rst'
      - '**/*.man'

jobs:
  generate-rst:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install pandoc
      
      - name: Convert or Update .man files and index.rst
        run: |
          # Check if docs/man directory exists and is empty
          if [ ! -d docs/man ] || [ -z "$(ls -A docs/man)" ]; then
              echo "docs/man is empty or does not exist. Converting all .man files."
              find ldms/src ldms/man -name "*.man" | while IFS= read -r man_file; do
                  target_dir="docs/man$(echo $man_file | sed 's|^ldms/src/||;s|^ldms/man/||;s|/[^/]*$||')"
                  target_file="docs/man$(echo $man_file | sed 's|^ldms/src/||;s|^ldms/man/||;s|\.man$/.rst|')"
                  
                  mkdir -p "$target_dir"
                  pandoc -f man "$man_file" -s -o "$target_file"
                  echo "Converted $man_file to $target_file"
              done
          else
              echo "docs/man exists. Converting only modified .man files."
              git diff --name-only HEAD~1 HEAD | grep '\.man$' | while IFS= read -r man_file; do
                  target_dir="docs/man$(echo $man_file | sed 's|^ldms/src/||;s|^ldms/man/||;s|/[^/]*$||')"
                  target_file="docs/man$(echo $man_file | sed 's|^ldms/src/||;s|^ldms/man/||;s|\.man$/.rst|')"
                  
                  mkdir -p "$target_dir"
                  pandoc -f man "$man_file" -s -o "$target_file"
                  echo "Converted $man_file to $target_file"
              done
          fi

          # Generate or update index.rst files
          find docs/man -type d | while IFS= read -r dir; do
              rst_files=$(find "$dir" -maxdepth 1 -name "*.rst" ! -name "index.rst" | sort)

              if [ ! -z "$rst_files" ] || [ "$(find "$dir" -mindepth 1 -type d)" ]; then
                  echo "Updating index.rst in $dir"
                  dir_name=$(basename "$dir")
                  caption_name=$(echo "$dir_name" | tr '[:lower:]' '[:upper:]')
                  echo "$caption_name" > "$dir/index.rst"
                  echo "===================" >> "$dir/index.rst"
                  echo "" >> "$dir/index.rst"
                  echo ".. toctree::" >> "$dir/index.rst"
                  echo "   :maxdepth: 2" >> "$dir/index.rst"
                  echo "   :caption: $caption_name" >> "$dir/index.rst"
                  echo "" >> "$dir/index.rst"

                  for rst_file in $rst_files; do
                      base_name=$(basename "$rst_file" .rst)
                      echo "   $base_name" >> "$dir/index.rst"
                  done

                  subdirs=$(find "$dir" -mindepth 1 -maxdepth 1 -type d | sort)
                  for subdir in $subdirs; do
                      subdir_name=$(basename "$subdir")
                      echo "   $subdir_name/index" >> "$dir/index.rst"
                  done
              fi
          done

      - name: Commit and Push Changes
        if: success()
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          if [ -n "$(git status --porcelain)" ]; then
              git add docs/man
              git commit -m "Auto-generated .rst and index.rst files from .man pages"
              git push origin HEAD
          else
              echo "No changes to commit."
          fi

  build-docs:
    needs: generate-rst
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install Dependencies
        run: |
          pip install -r docs/requirements.txt

      - name: Build Documentation Locally
        run: |
          sphinx-build -b html docs/ docs/_build

  trigger-rtd:
    needs: build-docs  # Ensures this job runs after the build-docs job
    runs-on: ubuntu-22.04

    steps:
      - name: Generate Webhook Signature and Trigger RTD
        run: |
          # Define the webhook secret
          SECRET="${{ secrets.RTD_WEBHOOK_SECRET }}"

          # Create a JSON payload with "ref" set to the branch name
          PAYLOAD="{\"ref\": \"${GITHUB_REF_NAME}\"}"

          # Generate HMAC SHA256 signature for the payload
          SIGNATURE=$(echo -n "$PAYLOAD" | openssl dgst -sha256 -hmac "$SECRET" | sed 's/^.* //')

          # Trigger the Read the Docs webhook
          curl -X POST \
               -H "Content-Type: application/json" \
               -H "X-Hub-Signature-256: sha256=$SIGNATURE" \
               -d "$PAYLOAD" \
               https://readthedocs.org/api/v2/webhook/ovis-rtd/273836/
