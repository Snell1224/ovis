name: Build and Trigger Readthedocs

on:
  push:
    paths:
      - 'docs/**'           # Trigger for changes in the docs directory
      - '**/*.rst'          # Trigger for any RST files
      - '**/*.man'          # Trigger for any man page files
  pull_request:
    paths:
      - 'docs/**'           # Same triggers for pull requests
      - '**/*.rst'
      - '**/*.man'

jobs:
  generate-rst:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install pandoc

      - name: Convert and Update .man Files
        run: |
          # Check if docs/man/ is empty or doesn't exist
          if [ ! -d "docs/man" ] || [ -z "$(ls -A docs/man)" ]; then
            echo "docs/man is empty or does not exist. Converting all .man files."
            find ldms/src ldms/man -name "*.man" | while read -r man_file; do
              # Strip off /ldms/src and /ldms/man and replicate the structure under docs/man/
              target_file="docs/man$(echo $man_file | sed 's|^ldms/src/||;s|^ldms/man/||;s/\.man$/.rst/')"
              mkdir -p "$(dirname "$target_file")"

              # Convert the .man file to .rst using pandoc
              pandoc -f man "$man_file" -s -o "$target_file"

              # Add a title to the .rst file matching its file name
              file_name=$(basename "$target_file" .rst)
              sed -i "1s/^/$file_name\n$(printf '=%.0s' $(seq ${#file_name}))\n\n/" "$target_file"

              echo "Converted $man_file to $target_file"
            done
          else
            echo "docs/man is not empty. Converting only modified .man files."
            git diff --name-only HEAD~1 | grep -E '\.man$' | while read -r man_file; do
              target_file="docs/man$(echo $man_file | sed 's|^ldms/src/||;s|^ldms/man/||;s/\.man$/.rst/')"
              mkdir -p "$(dirname "$target_file")"

              # Convert the .man file to .rst using pandoc
              pandoc -f man "$man_file" -s -o "$target_file"

              # Add a title to the .rst file matching its file name
              file_name=$(basename "$target_file" .rst)
              sed -i "1s/^/$file_name\n$(printf '=%.0s' $(seq ${#file_name}))\n\n/" "$target_file"

              echo "Converted $man_file to $target_file"
            done
          fi

      - name: Update Index Files
        run: |
          find docs/man -type d | while IFS= read -r dir; do
            # List all .rst files in the current directory (excluding index.rst)
            rst_files=$(find "$dir" -maxdepth 1 -name "*.rst" ! -name "index.rst" | sort)

            # If there are .rst files in this directory, create or update an index.rst file
            if [ ! -z "$rst_files" ]; then
              echo "Generating index.rst in $dir"

              # Special case for docs/man root directory
              if [ "$dir" == "docs/man" ]; then
                echo ".. toctree::" > "$dir/index.rst"
              else
                caption=$(basename "$dir" | sed 's/.*/\u&/')
                echo "$caption" > "$dir/index.rst"
                echo "$(printf '=%.0s' $(seq ${#caption}))" >> "$dir/index.rst"
                echo "" >> "$dir/index.rst"
                echo ".. toctree::" >> "$dir/index.rst"
              fi

              echo "   :maxdepth: 4" >> "$dir/index.rst"
              echo "" >> "$dir/index.rst"

              for rst_file in $rst_files; do
                base_name=$(basename "$rst_file" .rst)
                echo "   $base_name" >> "$dir/index.rst"
              done
            fi
          done

      - name: Commit and Push Changes
        if: success()
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # Add changes if there are any
          if [ -n "$(git status --porcelain)" ]; then
            git add docs/man
            git commit -m "Auto-generate/update .rst files and index.rst"
            git push origin HEAD
          else
            echo "No changes to commit."
          fi

  build-docs:
    needs: generate-rst
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install Dependencies
        run: |
          pip install -r docs/requirements.txt

      - name: Build Documentation Locally
        run: |
          sphinx-build -b html docs/ docs/_build

  trigger-rtd:
    needs: build-docs  # Ensures this job runs after the build-docs job
    runs-on: ubuntu-22.04

    steps:
      - name: Generate Webhook Signature and Trigger RTD
        run: |
          # Define the webhook secret
          SECRET="${{ secrets.RTD_WEBHOOK_SECRET }}"

          # Create a JSON payload with "ref" set to the branch name
          PAYLOAD="{\"ref\": \"${GITHUB_REF_NAME}\"}"

          # Generate HMAC SHA256 signature for the payload
          SIGNATURE=$(echo -n "$PAYLOAD" | openssl dgst -sha256 -hmac "$SECRET" | sed 's/^.* //')

          # Trigger the Read the Docs webhook
          curl -X POST \
               -H "Content-Type: application/json" \
               -H "X-Hub-Signature-256: sha256=$SIGNATURE" \
               -d "$PAYLOAD" \
               https://readthedocs.org/api/v2/webhook/ovis-rtd/273836/
