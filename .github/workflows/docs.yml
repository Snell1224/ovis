name: Build and Trigger Readthedocs

on:
  push:
    paths:
      - 'docs/**'           # Trigger for changes in the docs directory
      - '**/*.rst'          # Trigger for any RST files
      - '**/*.man'          # Trigger for any man page files
  pull_request:
    paths:
      - 'docs/**'           # Same triggers for pull requests
      - '**/*.rst'
      - '**/*.man'

jobs:
  generate-rst:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install pandoc
      
      - name: Convert and Update .man Files
        run: |
          # Function to add a title to an .rst file based on its filename
          add_title_to_rst() {
              local rst_file=$1
              local title=$(basename "$rst_file" .rst)

              # Add the title if not present or update it
              if ! grep -q "^$title" "$rst_file"; then
                  # Remove existing title (if any)
                  sed -i '/^===*/d' "$rst_file"
                  # Insert title at the top
                  sed -i "1s|^|$title\n$(printf '=%.0s' $(seq 1 ${#title}))\n\n|" "$rst_file"
              fi
          }

          # Check if docs/man exists and has .rst files
          if [ -d docs/man ]; then
              # Add titles to all existing .rst files in docs/man
              find docs/man -type f -name "*.rst" | while IFS= read -r rst_file; do
                  add_title_to_rst "$rst_file"
              done
          fi

          # Traverse and convert updated or new .man files
          for man_file in $(find ldms/src ldms/man -name "*.man"); do
              # Generate target .rst file path
              target_rst="docs/man$(echo $man_file | sed 's|^ldms/src/||;s|^ldms/man/||;s/\.man$/.rst/')"

              # Check if conversion is needed
              if [ ! -f "$target_rst" ] || [ "$man_file" -nt "$target_rst" ]; then
                  # Ensure the target directory exists
                  mkdir -p "$(dirname "$target_rst")"

                  # Convert the .man file to .rst
                  pandoc -f man "$man_file" -s -o "$target_rst"
                  echo "Converted $man_file to $target_rst"

                  # Add title to the newly generated .rst file
                  add_title_to_rst "$target_rst"
              fi
          done

      - name: Generate Index Files
        run: |
          # Function to create an index.rst file in a directory
          generate_index() {
              local dir=$1
              local rst_files=$(find "$dir" -maxdepth 1 -name "*.rst" ! -name "index.rst" | sort)

              # If there are .rst files in this directory, create an index.rst file
              if [ ! -z "$rst_files" ]; then
                  echo "Generating index.rst in $dir"

                  # Create the index.rst file
                  echo ".. toctree::" > "$dir/index.rst"
                  echo "   :maxdepth: 4" >> "$dir/index.rst"
                  echo "" >> "$dir/index.rst"

                  # Add entries for subdirectories and .rst files
                  for entry in $(find "$dir" -mindepth 1 -maxdepth 1 | sort); do
                      if [ -d "$entry" ]; then
                          subdir_name=$(basename "$entry" | tr '[:lower:]' '[:upper:]')
                          echo "   $subdir_name/" >> "$dir/index.rst"
                      elif [[ "$entry" == *.rst ]]; then
                          base_name=$(basename "$entry" .rst)
                          echo "   $base_name" >> "$dir/index.rst"
                      fi
                  done
              fi
          }

          # Generate index.rst files for all directories under docs/man
          if [ -d docs/man ]; then
              find docs/man -type d | while IFS= read -r dir; do
                  generate_index "$dir"
              done
          fi

  build-docs:
    needs: generate-rst
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install Dependencies
        run: |
          pip install -r docs/requirements.txt

      - name: Build Documentation Locally
        run: |
          sphinx-build -b html docs/ docs/_build

  trigger-rtd:
    needs: build-docs  # Ensures this job runs after the build-docs job
    runs-on: ubuntu-22.04

    steps:
      - name: Generate Webhook Signature and Trigger RTD
        run: |
          # Define the webhook secret
          SECRET="${{ secrets.RTD_WEBHOOK_SECRET }}"

          # Create a JSON payload with "ref" set to the branch name
          PAYLOAD="{\"ref\": \"${GITHUB_REF_NAME}\"}"

          # Generate HMAC SHA256 signature for the payload
          SIGNATURE=$(echo -n "$PAYLOAD" | openssl dgst -sha256 -hmac "$SECRET" | sed 's/^.* //')

          # Trigger the Read the Docs webhook
          curl -X POST \
               -H "Content-Type: application/json" \
               -H "X-Hub-Signature-256: sha256=$SIGNATURE" \
               -d "$PAYLOAD" \
               https://readthedocs.org/api/v2/webhook/ovis-rtd/273836/
