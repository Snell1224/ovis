name: Build and Trigger Readthedocs

on:
  push:
    paths:
      - 'docs/**'           # Trigger for changes in the docs directory
      - '**/*.rst'          # Trigger for any RST files
      - '**/*.man'          # Trigger for any man page files
  pull_request:
    paths:
      - 'docs/**'           # Same triggers for pull requests
      - '**/*.rst'
      - '**/*.man'

jobs:
  generate-rst:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install pandoc
      
      - name: Convert .man files to .rst
        run: |
          # Traverse the /ldms/src and /ldms/man directories to find all .man files
          find ldms/src ldms/man -name "*.man" -print0 | while IFS= read -r -d '' man_file; do
            # Strip off /ldms/src and /ldms/man and replicate the structure under docs/man/
            target_dir="docs/man$(echo "$man_file" | sed 's|^ldms/src/||;s|^ldms/man/||;s/\.man$/.rst/;s|^[^/]*|/&|')"

            # Check if the .rst file already exists
            if [ ! -f "$target_dir" ]; then
              # Ensure the target directory exists
              mkdir -p "$(dirname "$target_dir")"
              # Convert the .man file to .rst using pandoc and suppress errors
              pandoc -f man "$man_file" -s -o "$target_dir" --quiet || echo "Error suppressing: $man_file"
              echo "Converted $man_file to $target_dir"
            else
              echo "$target_dir already exists, skipping conversion."
            fi
          done

      - name: Generate index.rst for docs/man directory
        run: |
          # List all .rst files in the current directory (excluding index.rst)
          rst_files=$(find "$dir" -maxdepth 1 -name "*.rst" ! -name "index.rst" | sort)
      
          # If there are .rst files in this directory, create an index.rst file
            if [ ! -z "$rst_files" ]; then
                # Create the index.rst file
                  echo "Generating index.rst in $dir"
      
                  # Start the index file with a title
                  echo "Index of $dir" > "$dir/index.rst"
                  echo "===================" >> "$dir/index.rst"
                  echo "" >> "$dir/index.rst"
      
                  # Add links to all .rst files in the directory
                  for rst_file in $rst_files; do
                      # Get the filename without path (for linking in the index)
                      base_name=$(basename "$rst_file")
                      echo "* :doc:`$base_name`" >> "$dir/index.rst"
                  done
              fi
          done
      
          # Check if index.rst files were generated and list their names
          echo "Generated index.rst files in the following directories:"
          find docs/man -type f -name "index.rst"
      
      - name: Commit and Push Generated RST Files
        if: success()
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          # Add all .rst files under docs/man/ to be tracked and committed
          git add docs/man/**/*.rst docs/man/index.rst
          git commit -m "Auto-generated .rst files from .man pages"
          git push origin HEAD
         
  build-docs:
    needs: generate-rst
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install Dependencies
        run: |
          pip install -r docs/requirements.txt

      - name: Build Documentation Locally
        run: |
          sphinx-build -b html docs/ docs/_build

  trigger-rtd:
    needs: build-docs  # Ensures this job runs after the build-docs job
    runs-on: ubuntu-22.04

    steps:
      - name: Generate Webhook Signature and Trigger RTD
        run: |
          # Define the webhook secret
          SECRET="${{ secrets.RTD_WEBHOOK_SECRET }}"

          # Create a JSON payload with "ref" set to the branch name
          PAYLOAD="{\"ref\": \"${GITHUB_REF_NAME}\"}"

          # Generate HMAC SHA256 signature for the payload
          SIGNATURE=$(echo -n "$PAYLOAD" | openssl dgst -sha256 -hmac "$SECRET" | sed 's/^.* //')

          # Trigger the Read the Docs webhook
          curl -X POST \
               -H "Content-Type: application/json" \
               -H "X-Hub-Signature-256: sha256=$SIGNATURE" \
               -d "$PAYLOAD" \
               https://readthedocs.org/api/v2/webhook/ovis-rtd/273836/
